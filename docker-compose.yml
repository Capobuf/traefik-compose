version: '3'

### Here we Have Traefik ###

services:
 reverse-proxy: #Name of Service
  image: traefik #The official Traefik docker image
  
  container_name: traefik 
    
  command: --api --docker #Enables the web UI and tells Tr√¶fik to listen to docker
    
  networks: #Here i declare in wich network i want my container
   - prx #Name of the Network

  ports: #Here i declare the exposed port
   - "80:80"     #The HTTP port
   - "443:443"   #The HTTPS port

  labels:
   - traefik.frontend.rule=Host:proxy.dotroot.xyz
   - traefik.port=8080
    
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock #Here we pass docker socket to Traefik
   - ./traefik.toml:/traefik.toml #Here we have the toml configuration as volume
   - ./acme.json:/acme.json #here we have acme settings for let's encrypt feature

### Here we Have Portainer ###
 container-manager:

  image: portainer/portainer

  container_name: portainer

  restart: always 

  depends_on:
   - reverse-proxy

  environment:
  LOG_LEVEL: debug

  networks:
   - prx
      
  ports:
   - "9000:9000" #Declare port for WebUI

  volumes:
   - /var/run/docker.sock:/var/run/docker.sock #Here we pass docker socket to Portainer
   - portainer_data:/data
  labels:
   - "traefik.backend=portainer"
   - "traefik.frontend.rule=Host:portainer.dotroot.xyz"
   - "traefik.port=80"
   - "traefik.enable=true"
   - "traefik.docker.network=prx"

volumes:
  portainer_data:

networks:       
  prx:
    external: false #Here docker create the network. But if i already created this network, set to true value