version: '3'

### Here we Have Traefik ###

services:
 reverse-proxy: #Name of Service
  image: traefik #The official Traefik docker image
  
  container_name: traefik #Name of Container
    
  command: --api --docker #Enables the web UI and tells Tr√¶fik to listen to docker
    
  networks: #Here i declare in wich network i want my container
   - prx #Name of the Network

  ports: #Here i declare the exposed port
   - "80:80"     #The HTTP port
   - "443:443"   #The HTTPS port

  labels: #Labels needed for pass some value to traefik
   - traefik.frontend.rule=Host:proxy.dotroot.xyz #Rule for hostname redirection
   - traefik.port=8080 #Port that Traefik must use
    
  volumes: #Declare volumes to attach to container
   - /var/run/docker.sock:/var/run/docker.sock #Here we pass docker socket to Traefik
   - ./traefik.toml:/traefik.toml #Here we have the toml configuration as volume
   - ./acme.json:/acme.json #here we have acme settings for let's encrypt feature

### Here we Have Portainer ###

 container-manager: #Name of Service

  image: portainer/portainer #Official Portainer Image from Docker Registry

  container_name: portainer #Container Name

  restart: always #Policy of restart, try to restart every time go down

  depends_on: #Wait follow service before starting
   - reverse-proxy #Wait Traefik for starting

  networks: #Declare wich network join container
   - prx #Name of Network
      
  ports: #Ports to be exposed
   - "9000:9000" #Declare port for WebUI

  volumes: #Declare volumes to attach to container
   - /var/run/docker.sock:/var/run/docker.sock #Here we pass docker socket to Portainer
   - portainer_data:/data #Define portainer_data for make persistent session of portainer

  labels: #Labels needed for pass some value to traefik
   - "traefik.backend=portainer" #Give the name for backend
   - "traefik.frontend.rule=Host:portainer.dotroot.xyz" #Rule for hostname redirection
   - "traefik.port=80" #Port that traefik must use
   - "traefik.enable=true" #Enable traefik on this container
   - "traefik.docker.network=prx" #Specify wich network Traefik must use for connect to container

volumes: #Declare volume
  portainer_data: #Declared for Portainer data

networks: #Declare Network
  prx: #Name of network
    external: false #Here docker create the network. But if i already created this network, set to true value